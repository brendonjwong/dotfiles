" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode set backspace=indent,eol,start

set history=50 " keep 50 lines of command line history
set ruler      " show the cursor position all the time
set showcmd    " display incomplete commands
set incsearch  " do incremental searching

" Don't use Ex mode, use Q for formatting
map Q gq

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if line("'\"") >= 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else
  set autoindent " always set autoindenting on
endif " has("autocmd")

if has('langmap') && exists('+langnoremap')
  " Prevent that the langmap option applies to characters that result from a
  " mapping.  If unset (default), this may break plugins (but it's backward
  " compatible).
  set langnoremap
endif

set tabstop=4
set shiftwidth=4
set expandtab " use spaces for tabs
set list      " show whitespace characters
set nobackup
set noundofile
set number    " show line numbers on sidebar
set ignorecase

" Color settings
highlight Pmenu ctermbg=white

" ---------- SHORTCUTS ----------

let mapleader=","
let maplocalleader=","

" Change vim windows
nmap <silent> <C-j> :wincmd j<CR>
nmap <silent> <C-k> :wincmd k<CR>
nmap <silent> <C-h> :wincmd h<CR>
nmap <silent> <C-l> :wincmd l<CR>

" Use tab to jump to matching enclosure pairs
nnoremap <tab> %
vnoremap <tab> %

" Clear search highlights
nnoremap <leader><space> :noh<cr>

" Open netrw
nnoremap <leader>e :Explore<cr>

" ---------- CLOJURE ----------

function! Cljstyle()
    let cwd = getcwd()
    let winsave = winsaveview()
    execute "cd" . expand('%:p:h')

    :%!cljstyle pipe

    execute "cd" . cwd
    call winrestview(winsave)
endfunction

command! Cljstyle call Cljstyle()

" Connects to nREPL using vim-iced, with a one- or two-arg form:
" - (port)
" - (host, port)
function! CljConnect(...)
    call iced#repl#execute('disconnect')
    if a:0 == 1
        let g:iced#nrepl#host = "127.0.0.1"
        call iced#repl#connect('nrepl', a:1)
    else
        let g:iced#nrepl#host = a:1
        call iced#repl#connect('nrepl', a:2)
    endif
endfunction

command! -nargs=+ CljConnect call CljConnect(<f-args>)

" ---------- PYTHON ----------

autocmd BufReadPost *.py
  \ set tabstop=4     |
  \ set softtabstop=4 |
  \ set shiftwidth=4  |
  \ set expandtab     |
  \ set autoindent
